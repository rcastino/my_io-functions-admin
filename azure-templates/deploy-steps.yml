# Azure DevOps template used to perform all the deploy steps including build. 
#
# Note. Deployment slots let you deploy different versions of your function
# app to different URLs. You can test a certain version and then swap content
# and configuration between slots.

parameters:
- name: 'deployType'
  type: string
  default: deployToProductionSlot

- name: 'archiveFileName'
  type: string
  default: 'package.zip'

- name: 'azureSubscription'
  type: string
  default: ''

- name: 'resourceGroupName'
  type: string
  default: ''

- name: 'appName'
  type: string
  default: ''
    
steps:
# Make the build and generate the package to be deployed
- template: ./prepare-deploy-steps.yml
  parameters:
    archiveFileName: ${{ parameters.archiveFileName }}

- ${{ if eq(parameters.deployType, 'deployToProductionSlot') }}:
  # Option 1: standard deployment without slots (i.e. deploy directly to main slot)
  - task: AzureFunctionApp@1
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      resourceGroupName: '${{ parameters.resourceGroupName }}'
      appType: 'functionApp'
      appName: '${{ parameters.appName }}'
      package: '$(Build.ArtifactStagingDirectory)/${{ parameters.archiveFileName }}'
      deploymentMethod: 'auto'
    displayName: Standard deploy

- ${{ if eq(parameters.deployType, 'deployToStagingSlot') }}:
  # Option 2: deployment to 'staging' slot only
  - task: AzureFunctionApp@1
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      resourceGroupName: '${{ parameters.resourceGroupName }}'
      appType: 'functionApp'
      appName: '${{ parameters.appName }}'
      package: '$(Build.ArtifactStagingDirectory)/${{ parameters.archiveFileName }}'
      deploymentMethod: 'auto'
      deployToSlotOrASE: true
      slotName: 'staging'
    displayName: Deploy to staging slot only

- ${{ if eq(parameters.deployType, 'deployToStagingSlotAndSwap') }}:
  # Option 3: deployment with two slots ('staging' and 'production')
  # First step: deploy to 'staging' slot 
  - task: AzureFunctionApp@1
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      resourceGroupName: '${{ parameters.resourceGroupName }}'
      appType: 'functionApp'
      appName: '${{ parameters.appName }}'
      package: '$(Build.ArtifactStagingDirectory)/${{ parameters.archiveFileName }}'
      deploymentMethod: 'auto'
      deployToSlotOrASE: true
      slotName: 'staging'
    displayName: Deploy to staging slot
    
  # Second step: swap 'staging' with 'production' slot
  - task: AzureAppServiceManage@0
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      resourceGroupName: '${{ parameters.resourceGroupName }}'
      webAppName: '${{ parameters.appName }}'
      sourceSlot: staging
      swapWithProduction: true
    displayName: Swap with production slot
